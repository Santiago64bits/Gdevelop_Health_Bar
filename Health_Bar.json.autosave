{"firstLayout":"","gdVersion":{"build":99,"major":4,"minor":0,"revision":0},"properties":{"adaptGameResolutionAtRuntime":true,"antialiasingMode":"MSAA","antialisingEnabledOnMobile":false,"folderProject":false,"orientation":"landscape","packageName":"com.example.gamename","pixelsRounding":true,"projectUuid":"01dfe973-4c7e-4512-8f11-cceae0fd0665","scaleMode":"nearest","sizeOnStartupMode":"adaptWidth","templateSlug":"","useExternalSourceFiles":false,"version":"1.0.0","name":"Health_Bar","description":"","author":"","windowWidth":1280,"windowHeight":720,"latestCompilationDirectory":"","maxFPS":60,"minFPS":20,"verticalSync":false,"platformSpecificAssets":{},"loadingScreen":{"backgroundColor":0,"backgroundFadeInDuration":0.2,"backgroundImageResourceName":"","gdevelopLogoStyle":"light","logoAndProgressFadeInDuration":0.2,"logoAndProgressLogoFadeInDelay":0.0,"minDuration":1.5,"progressBarColor":16777215,"progressBarHeight":20.0,"progressBarMaxWidth":200.0,"progressBarMinWidth":40.0,"progressBarWidthPercent":30.0,"showGDevelopSplash":true,"showProgressBar":true},"watermark":{"placement":"bottom-left","showWatermark":true},"authorIds":[],"authorUsernames":[],"categories":[],"playableDevices":[],"extensionProperties":[],"platforms":[{"name":"GDevelop JS platform"}],"currentPlatform":"GDevelop JS platform"},"resources":{"resources":[{"alwaysLoaded":false,"file":"Health_Bar/HP_Bar_Background.png","kind":"image","metadata":"","name":"Health_Bar\\HP_Bar_Background.png","smoothed":false,"userAdded":false},{"alwaysLoaded":false,"file":"Health_Bar/HP_Bar_Paddle.png","kind":"image","metadata":"","name":"Health_Bar\\HP_Bar_Paddle.png","smoothed":false,"userAdded":true},{"alwaysLoaded":false,"file":"Health_Bar/Enemy.png","kind":"image","metadata":"","name":"Health_Bar\\Enemy.png","smoothed":false,"userAdded":true}],"resourceFolders":[]},"objects":[],"objectsFolderStructure":{"folderName":"__ROOT"},"objectsGroups":[],"variables":[],"layouts":[{"b":209,"disableInputWhenNotFocused":true,"mangledName":"Testing","name":"Testing","r":209,"standardSortMethod":true,"stopSoundsOnStartup":true,"title":"","v":209,"uiSettings":{"grid":false,"gridType":"rectangular","gridWidth":32.0,"gridHeight":32.0,"gridOffsetX":0.0,"gridOffsetY":0.0,"gridColor":10401023.0,"gridAlpha":0.8,"snap":false,"zoomFactor":0.5824517733822235,"windowMask":false},"objectsGroups":[],"variables":[{"folded":true,"name":"Health_Count","type":"number","value":0.0},{"folded":true,"name":"Final_Health_Max","type":"number","value":0.0},{"folded":true,"name":"Final_Health","type":"number","value":0.0},{"folded":true,"name":"Health_Full","type":"number","value":0.0},{"folded":true,"name":"Health_Ready","type":"number","value":0.0},{"folded":true,"name":"Health_Original","type":"number","value":1000.0},{"folded":true,"name":"Damage","type":"number","value":0.0},{"folded":true,"name":"Attack_Made","type":"number","value":0.0},{"folded":true,"name":"Damage_Acumulator","type":"number","value":0.0},{"folded":true,"name":"Count","type":"number","value":0.0},{"folded":true,"name":"Count_Wait","type":"number","value":0.0}],"instances":[{"angle":0.0,"customSize":false,"height":0.0,"keepRatio":true,"layer":"","name":"HP_BackGround","persistentUuid":"5df623e3-d93a-4529-878b-55f9f9890dd5","width":0.0,"x":198.0,"y":140.0,"zOrder":1,"numberProperties":[],"stringProperties":[],"initialVariables":[]},{"angle":0.0,"customSize":true,"depth":0.0,"height":18.0,"layer":"","name":"Tiled_HP","persistentUuid":"e38ff3cc-1b51-485d-ab9a-c6baf3c118b2","width":180.0,"x":198.0,"y":140.0,"zOrder":2,"numberProperties":[],"stringProperties":[],"initialVariables":[]},{"angle":0.0,"customSize":false,"height":0.0,"keepRatio":true,"layer":"","name":"Enemy","persistentUuid":"88cc46a1-aa82-4465-9c22-7c83ef6edcf8","width":0.0,"x":567.0,"y":239.0,"zOrder":3,"numberProperties":[],"stringProperties":[],"initialVariables":[{"folded":true,"name":"Da√±o","type":"number","value":30.0}]},{"angle":0.0,"customSize":false,"height":0.0,"keepRatio":true,"layer":"","name":"First_Debug","persistentUuid":"a7cd1f4c-f494-4dd2-9e16-68c6541cb4c7","width":0.0,"x":133.0,"y":371.0,"zOrder":4,"numberProperties":[],"stringProperties":[],"initialVariables":[]},{"angle":0.0,"customSize":false,"height":0.0,"keepRatio":true,"layer":"","name":"Second_Debug","persistentUuid":"1fc2e46a-4c15-4ade-8c88-45e41ccc3d5a","width":0.0,"x":242.0,"y":491.0,"zOrder":5,"numberProperties":[],"stringProperties":[],"initialVariables":[]},{"angle":0.0,"customSize":false,"height":0.0,"keepRatio":true,"layer":"","name":"HP_Text","persistentUuid":"e60c5f3a-f7ab-4a42-90a8-d642100f65cf","width":0.0,"x":250.0,"y":140.0,"zOrder":6,"numberProperties":[],"stringProperties":[],"initialVariables":[]}],"objects":[{"adaptCollisionMaskAutomatically":true,"assetStoreId":"","name":"HP_BackGround","type":"Sprite","updateIfNotVisible":false,"variables":[],"effects":[],"behaviors":[],"animations":[{"name":"","useMultipleDirections":false,"directions":[{"looping":false,"timeBetweenFrames":0.08,"sprites":[{"hasCustomCollisionMask":true,"image":"Health_Bar\\HP_Bar_Background.png","points":[],"originPoint":{"name":"origine","x":0.0,"y":0.0},"centerPoint":{"automatic":true,"name":"centre","x":0.0,"y":0.0},"customCollisionMask":[[{"x":0.0,"y":0.0},{"x":176.0,"y":0.0},{"x":176.0,"y":18.0},{"x":0.0,"y":18.0}]]}]}]}]},{"assetStoreId":"","height":18.0,"name":"Tiled_HP","texture":"Health_Bar\\HP_Bar_Paddle.png","type":"TiledSpriteObject::TiledSprite","width":180.0,"variables":[{"folded":true,"name":"Max_Value_Pixel","type":"number","value":0.0},{"folded":true,"name":"Pixel_Value","type":"number","value":0.0}],"effects":[],"behaviors":[]},{"adaptCollisionMaskAutomatically":true,"assetStoreId":"","name":"Enemy","type":"Sprite","updateIfNotVisible":false,"variables":[{"folded":true,"name":"Damage","type":"number","value":0.0}],"effects":[],"behaviors":[],"animations":[{"name":"","useMultipleDirections":false,"directions":[{"looping":false,"timeBetweenFrames":0.08,"sprites":[{"hasCustomCollisionMask":true,"image":"Health_Bar\\Enemy.png","points":[],"originPoint":{"name":"origine","x":0.0,"y":0.0},"centerPoint":{"automatic":true,"name":"centre","x":0.0,"y":0.0},"customCollisionMask":[[{"x":0.0,"y":0.0},{"x":100.0,"y":0.0},{"x":100.0,"y":120.0},{"x":0.0,"y":120.0}]]}]}]}]},{"assetStoreId":"","bold":false,"italic":false,"name":"First_Debug","smoothed":true,"type":"TextObject::Text","underlined":false,"variables":[],"effects":[],"behaviors":[],"string":"Text","font":"","textAlignment":"left","characterSize":30.0,"color":{"b":0,"g":0,"r":0},"content":{"bold":false,"isOutlineEnabled":false,"isShadowEnabled":false,"italic":false,"outlineColor":"255;255;255","outlineThickness":2.0,"shadowAngle":90.0,"shadowBlurRadius":2.0,"shadowColor":"0;0;0","shadowDistance":4.0,"shadowOpacity":127.0,"smoothed":true,"underlined":false,"text":"Text","font":"","textAlignment":"left","characterSize":30.0,"color":"0;0;0"}},{"assetStoreId":"","bold":false,"italic":false,"name":"Second_Debug","smoothed":true,"type":"TextObject::Text","underlined":false,"variables":[],"effects":[],"behaviors":[],"string":"Text","font":"","textAlignment":"left","characterSize":30.0,"color":{"b":0,"g":0,"r":0},"content":{"bold":false,"isOutlineEnabled":false,"isShadowEnabled":false,"italic":false,"outlineColor":"255;255;255","outlineThickness":2.0,"shadowAngle":90.0,"shadowBlurRadius":2.0,"shadowColor":"0;0;0","shadowDistance":4.0,"shadowOpacity":127.0,"smoothed":true,"underlined":false,"text":"Text","font":"","textAlignment":"left","characterSize":30.0,"color":"0;0;0"}},{"assetStoreId":"","bold":false,"italic":false,"name":"HP_Text","smoothed":true,"type":"TextObject::Text","underlined":false,"variables":[],"effects":[],"behaviors":[],"string":"Text","font":"","textAlignment":"left","characterSize":16.0,"color":{"b":255,"g":255,"r":255},"content":{"bold":false,"isOutlineEnabled":false,"isShadowEnabled":false,"italic":false,"outlineColor":"255;255;255","outlineThickness":2.0,"shadowAngle":90.0,"shadowBlurRadius":2.0,"shadowColor":"0;0;0","shadowDistance":4.0,"shadowOpacity":127.0,"smoothed":true,"underlined":false,"text":"Text","font":"","textAlignment":"left","characterSize":16.0,"color":"255;255;255"}}],"objectsFolderStructure":{"folderName":"__ROOT","children":[{"objectName":"HP_BackGround"},{"objectName":"Tiled_HP"},{"objectName":"Enemy"},{"objectName":"HP_Text"},{"objectName":"First_Debug"},{"objectName":"Second_Debug"}]},"events":[{"colorB":228,"colorG":176,"colorR":74,"creationTime":0,"folded":true,"name":"Inicialization","source":"","type":"BuiltinCommonInstructions::Group","events":[{"type":"BuiltinCommonInstructions::Comment","color":{"b":109,"g":230,"r":255,"textB":0,"textG":0,"textR":0},"comment":"What is done here is to initialize the \"Health_Counter\" variable by dividing the health variable by the length of the mosaic sprite to know how much each pixel of the health bar sprite will be worth."},{"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"value":"DepartScene"},"parameters":[""]}],"actions":[{"type":{"value":"SetNumberVariable"},"parameters":["Health_Count","=","round(Health_Original / 180)"]},{"type":{"value":"SetNumberObjectVariable"},"parameters":["Tiled_HP","Max_Value_Pixel","=","180"]},{"type":{"value":"SetNumberObjectVariable"},"parameters":["Enemy","Damage","=","30"]},{"type":{"value":"SetNumberVariable"},"parameters":["Final_Health_Max","=","Health_Original"]}]},{"type":"BuiltinCommonInstructions::Comment","color":{"b":109,"g":230,"r":255,"textB":0,"textG":0,"textR":0},"comment":"What is done here is to verify that the Pixel_Value variable is less than Max_Pixel_Value and then the HP of Health_Count is added and a 1 to the pixel value until reaching 180 or the length we want"},{"folded":true,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"value":"NumberObjectVariable"},"parameters":["Tiled_HP","Pixel_Value","<","Tiled_HP.Max_Value_Pixel"]},{"type":{"value":"NumberVariable"},"parameters":["Health_Full","<","1"]}],"actions":[{"type":{"value":"SetNumberVariable"},"parameters":["Final_Health","+","Health_Count"]},{"type":{"value":"SetNumberObjectVariable"},"parameters":["Tiled_HP","Pixel_Value","+","1"]}],"events":[{"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"value":"NumberVariable"},"parameters":["Final_Health",">","Health_Original"]}],"actions":[{"type":{"value":"SetNumberVariable"},"parameters":["Health_Full","=","2"]}]},{"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"value":"NumberVariable"},"parameters":["Health_Full","=","1"]},{"type":{"value":"NumberObjectVariable"},"parameters":["Tiled_HP","Pixel_Value","=","Tiled_HP.Max_Value_Pixel"]}],"actions":[{"type":{"value":"SetNumberVariable"},"parameters":["Health_Full","=","1"]},{"type":{"value":"ResizableCapability::ResizableBehavior::SetWidth"},"parameters":["Tiled_HP","Resizable","=","Tiled_HP.Pixel_Value"]}]}]},{"type":"BuiltinCommonInstructions::Comment","color":{"b":109,"g":230,"r":255,"textB":0,"textG":0,"textR":0},"comment":"Here is fixed that here are no extra health points"},{"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"value":"NumberVariable"},"parameters":["Health_Full","=","2"]},{"type":{"value":"NumberVariable"},"parameters":["Health_Full","!=","1"]}],"actions":[{"type":{"value":"SetNumberVariable"},"parameters":["Final_Health","=","Health_Original"]},{"type":{"value":"ResizableCapability::ResizableBehavior::SetWidth"},"parameters":["Tiled_HP","Resizable","=","Tiled_HP.Pixel_Value"]},{"type":{"value":"SetNumberVariable"},"parameters":["Health_Full","=","1"]},{"type":{"value":"SetNumberObjectVariable"},"parameters":["Tiled_HP","Pixel_Value","=","180"]}]}],"parameters":[]},{"colorB":228,"colorG":176,"colorR":74,"creationTime":0,"folded":true,"name":"Health_Bar Is Ready","source":"","type":"BuiltinCommonInstructions::Group","events":[{"type":"BuiltinCommonInstructions::Comment","color":{"b":109,"g":230,"r":255,"textB":0,"textG":0,"textR":0},"comment":"Here we check that the Health bar is full before damage can be applied to the Health bar"},{"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"value":"BuiltinCommonInstructions::Or"},"parameters":[],"subInstructions":[{"type":{"value":"NumberVariable"},"parameters":["Health_Full","=","1"]},{"type":{"value":"NumberVariable"},"parameters":["Health_Full","=","2"]},{"type":{"value":"BuiltinCommonInstructions::Once"},"parameters":[]}]}],"actions":[{"type":{"value":"SetNumberVariable"},"parameters":["Health_Ready","=","1"]}]}],"parameters":[]},{"colorB":228,"colorG":176,"colorR":74,"creationTime":0,"folded":true,"name":"Getting Damage","source":"","type":"BuiltinCommonInstructions::Group","events":[{"type":"BuiltinCommonInstructions::Comment","color":{"b":109,"g":230,"r":255,"textB":0,"textG":0,"textR":0},"comment":"Here what you do is press a key to cause damage and the enemy damage variable is applied to a scene variable."},{"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"value":"KeyPressed"},"parameters":["","a"]},{"type":{"value":"NumberVariable"},"parameters":["Health_Ready","=","1"]},{"type":{"value":"NumberVariable"},"parameters":["Attack_Made","!=","1"]},{"type":{"value":"ResizableCapability::ResizableBehavior::Width"},"parameters":["Tiled_HP","Resizable",">","0"]},{"type":{"value":"BuiltinCommonInstructions::Once"},"parameters":[]}],"actions":[{"type":{"value":"SetNumberVariable"},"parameters":["Attack_Made","=","1"]},{"type":{"value":"SetNumberVariable"},"parameters":["Damage","=","Enemy.Damage"]}]},{"folded":true,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"value":"NumberVariable"},"parameters":["Attack_Made","=","1"]}],"actions":[],"events":[{"folded":true,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"value":"NumberVariable"},"parameters":["Damage_Acumulator","<","Damage"]}],"actions":[{"type":{"value":"SetNumberVariable"},"parameters":["Damage_Acumulator","+","Health_Count"]},{"type":{"value":"SetNumberVariable"},"parameters":["Count","+","1"]}],"events":[{"type":"BuiltinCommonInstructions::Comment","color":{"b":109,"g":230,"r":255,"textB":0,"textG":0,"textR":0},"comment":"Here it is verified that Damage_Accumulator is less than Damage and if it is equal, the correct subtractions are applied and Wait Counter is set to 5 to be able to set a cooldown"},{"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"value":"NumberVariable"},"parameters":["Damage_Acumulator","=","Damage"]}],"actions":[{"type":{"value":"SetNumberVariable"},"parameters":["Final_Health","-","Damage_Acumulator"]},{"type":{"value":"SetNumberObjectVariable"},"parameters":["Tiled_HP","Pixel_Value","-","Count"]},{"type":{"value":"SetNumberVariable"},"parameters":["Count_Wait","=","5"]}]}]},{"folded":true,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"value":"NumberVariable"},"parameters":["Damage_Acumulator",">","Damage"]}],"actions":[{"type":{"value":"SetNumberVariable"},"parameters":["Damage_Acumulator","-","round(Health_Count / 10)"]},{"type":{"value":"SetNumberVariable"},"parameters":["Count","-","1/10"]}],"events":[{"type":"BuiltinCommonInstructions::Comment","color":{"b":109,"g":230,"r":255,"textB":0,"textG":0,"textR":0},"comment":"Here it is verified that Damage_Accumulator is greater than Damage, if it is, the damage accumulator must be balanced until it is equal, eventually they will be equal and if it is equal, the correct subtractions are applied and Wait Counter is set to 5 to be able to set a cooldown"},{"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"value":"NumberVariable"},"parameters":["Damage_Acumulator","=","Damage"]}],"actions":[{"type":{"value":"SetNumberVariable"},"parameters":["Final_Health","-","Damage_Acumulator"]},{"type":{"value":"SetNumberObjectVariable"},"parameters":["Tiled_HP","Pixel_Value","-","Count"]},{"type":{"value":"SetNumberVariable"},"parameters":["Count_Wait","=","5"]}]}]}]}],"parameters":[]},{"colorB":228,"colorG":176,"colorR":74,"creationTime":0,"folded":true,"name":"Updating HP Bar","source":"","type":"BuiltinCommonInstructions::Group","events":[{"type":"BuiltinCommonInstructions::Comment","color":{"b":109,"g":230,"r":255,"textB":0,"textG":0,"textR":0},"comment":"Here, no matter what, the Health bar adapts at all times, and if it is 0 or less than 0, the pixels are adjusted to 0."},{"folded":true,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"value":"ResizableCapability::ResizableBehavior::SetWidth"},"parameters":["Tiled_HP","Resizable","=","Tiled_HP.Pixel_Value"]},{"type":{"value":"TextContainerCapability::TextContainerBehavior::SetValue"},"parameters":["HP_Text","Text","=","Final_Health + \"/\" + Final_Health_Max"]}],"events":[{"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"value":"NumberVariable"},"parameters":["Final_Health","<=","0"]},{"type":{"value":"BuiltinCommonInstructions::Once"},"parameters":[]}],"actions":[{"type":{"value":"SetNumberObjectVariable"},"parameters":["Tiled_HP","Pixel_Value","=","0"]},{"type":{"value":"SetNumberVariable"},"parameters":["Final_Health","=","0"]}]}]}],"parameters":[]},{"colorB":228,"colorG":176,"colorR":74,"creationTime":0,"folded":true,"name":"Counts","source":"","type":"BuiltinCommonInstructions::Group","events":[{"type":"BuiltinCommonInstructions::Comment","color":{"b":109,"g":230,"r":255,"textB":0,"textG":0,"textR":0},"comment":"Here it is verified that the Wait counter is greater than 0 and it will be subtracted by 0.5 until it reaches 0. When it is 0 it will re-enable the attacks again"},{"folded":true,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"value":"NumberVariable"},"parameters":["Count_Wait",">","0"]}],"actions":[{"type":{"value":"SetNumberVariable"},"parameters":["Count_Wait","-","0.25"]}],"events":[{"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"value":"NumberVariable"},"parameters":["Count_Wait","=","0"]}],"actions":[{"type":{"value":"SetNumberVariable"},"parameters":["Damage","=","0"]},{"type":{"value":"SetNumberVariable"},"parameters":["Damage_Acumulator","=","0"]},{"type":{"value":"SetNumberVariable"},"parameters":["Count","=","0"]},{"type":{"value":"SetNumberVariable"},"parameters":["Attack_Made","=","0"]}]}]}],"parameters":[]},{"colorB":228,"colorG":176,"colorR":74,"creationTime":0,"folded":true,"name":"Debug","source":"","type":"BuiltinCommonInstructions::Group","events":[{"type":"BuiltinCommonInstructions::Comment","color":{"b":109,"g":230,"r":255,"textB":0,"textG":0,"textR":0},"comment":"Just for Know the Coun value, Damage Acumulator and Health_Count.\n\ntoo for know Tiled_HP.Pixel_Value and Tiled_HP.Max_Value_Pixel"},{"disabled":true,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"value":"TextContainerCapability::TextContainerBehavior::SetValue"},"parameters":["First_Debug","Text","=","Count + \"/\" + Damage_Acumulator + \"/\" + Health_Count"]}]},{"disabled":true,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"value":"TextContainerCapability::TextContainerBehavior::SetValue"},"parameters":["Second_Debug","Text","=","Tiled_HP.Pixel_Value + \"/\" + Tiled_HP.Max_Value_Pixel"]}]}],"parameters":[]}],"layers":[{"ambientLightColorB":200,"ambientLightColorG":200,"ambientLightColorR":200,"camera3DFarPlaneDistance":10000.0,"camera3DFieldOfView":45.0,"camera3DNearPlaneDistance":3.0,"cameraType":"","followBaseLayerCamera":false,"isLightingLayer":false,"isLocked":false,"name":"","renderingType":"","visibility":true,"cameras":[{"defaultSize":true,"defaultViewport":true,"height":0.0,"viewportBottom":1.0,"viewportLeft":0.0,"viewportRight":1.0,"viewportTop":0.0,"width":0.0}],"effects":[{"effectType":"Scene3D::HemisphereLight","name":"3D Light","doubleParameters":{"elevation":45.0,"intensity":1.0,"rotation":0.0},"stringParameters":{"groundColor":"64;64;64","skyColor":"255;255;255","top":"Y-"},"booleanParameters":{}}]}],"behaviorsSharedData":[{"name":"Animation","type":"AnimatableCapability::AnimatableBehavior"},{"name":"Effect","type":"EffectCapability::EffectBehavior"},{"name":"Flippable","type":"FlippableCapability::FlippableBehavior"},{"name":"Opacity","type":"OpacityCapability::OpacityBehavior"},{"name":"Resizable","type":"ResizableCapability::ResizableBehavior"},{"name":"Scale","type":"ScalableCapability::ScalableBehavior"},{"name":"Text","type":"TextContainerCapability::TextContainerBehavior"}]}],"externalEvents":[],"eventsFunctionsExtensions":[],"externalLayouts":[],"externalSourceFiles":[]}